/**Design a base class shape with two double type values and member functions to input the data and compute_area() for calculating area of shape. Derive two classes: triangle and rectangle. Make compute_area() as abstract function and redefine this function in the derived class to suit their requirements. Write a program that accepts dimensions of triangle/rectangle and display calculated area
*/

import java.util.Scanner;

// Base class Shape
abstract class Shape {
    protected double dimension1;
    protected double dimension2;

    // Member function to input data
    public void inputDimensions() {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter dimension 1: ");
        dimension1 = scanner.nextDouble();
        System.out.print("Enter dimension 2: ");
        dimension2 = scanner.nextDouble();
    }

    // Abstract function to compute area
    public abstract double computeArea();
}

// Derived class Triangle
class Triangle extends Shape {
    // Redefine computeArea() for Triangle
    @Override
    public double computeArea() {
        return 0.5 * dimension1 * dimension2;
    }
}

// Derived class Rectangle
class Rectangle extends Shape {
    // Redefine computeArea() for Rectangle
    @Override
    public double computeArea() {
        return dimension1 * dimension2;
    }
}

// Main class
class ShapeDemo {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Create a Triangle
        System.out.println("Enter dimensions for Triangle:");
        Triangle triangle = new Triangle();
        triangle.inputDimensions();
        System.out.println("Area of Triangle: " + triangle.computeArea());

        // Create a Rectangle
        System.out.println("\nEnter dimensions for Rectangle:");
        Rectangle rectangle = new Rectangle();
        rectangle.inputDimensions();
        System.out.println("Area of Rectangle: " + rectangle.computeArea());

        scanner.close();
    }
}
